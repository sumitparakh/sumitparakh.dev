{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","useStyles","makeStyles","theme","root","display","background","marginBottom","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Header","_clsx","siteTitle","classes","useTheme","_React$useState","useState","open","setOpen","react_default","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Menu","Typography","variant","noWrap","gatsby_browser_entry","style","textDecoration","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","Inbox","Mail","ListItemText","primary","defaultProps","Layout","header","site","siteMetadata","margin","maxWidth","paddingTop","Date","getFullYear","_755544856","SEO","description","image","pathname","article","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_ref2","_ref2$site$siteMetada","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","react_helmet__WEBPACK_IMPORTED_MODULE_2__","name","property","_public_static_d_1376445457_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-page-2-js-2635844be3a3f5b7e51d.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  AppBar,\n  CssBaseline,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  ChevronLeft,\n  ChevronRight,\n  Menu,\n  Inbox,\n  Mail,\n} from \"@material-ui/icons\";\n\nimport clsx from \"clsx\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    background: `rebeccapurple`,\n    marginBottom: `4.75rem`,\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst Header = ({ siteTitle, props }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n\n  function handleDrawerOpen() {\n    // setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, { [classes.appBarShift]: open })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <Menu />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              <Link\n                to=\"/\"\n                style={{\n                  color: `white`,\n                  textDecoration: `none`,\n                }}\n              >\n                {siteTitle}\n              </Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawer}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? <ChevronLeft /> : <ChevronRight />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <Inbox /> : <Mail />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <Inbox /> : <Mail />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n      </div>\n    </>\n  )\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 0.7rem 0.7rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>© {new Date().getFullYear()}</footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ title, description, image, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          defaultImage,\n          twitterUsername,\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${image || defaultImage}`,\n        url: `${siteUrl}${pathname || \"/\"}`,\n      }\n\n      return (\n        <>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && (\n              <meta property=\"og:type\" content=\"article\" />\n            )}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n              <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n              <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n              <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n          </Helmet>\n        </>\n      )\n    }}\n  />\n)\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  pathname: null,\n  article: false,\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`\n"],"sourceRoot":""}