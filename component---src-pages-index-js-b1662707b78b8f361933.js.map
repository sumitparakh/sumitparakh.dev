{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","listQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","IndexPage","props","postList","data","allMarkdownRemark","a","createElement","edges","map","_ref","i","node","to","fields","slug","key","className","frontmatter","title","date","excerpt","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","_755544856"],"mappings":"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","file":"component---src-pages-index-js-b1662707b78b8f361933.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from 'gatsby';\r\nimport Layout from \"../components/layout\"\r\nimport './posts.css';\r\n\r\nconst IndexPage = (props) => {\r\n  const postList = props.data.allMarkdownRemark;\r\n  return (\r\n    <Layout>\r\n      {postList.edges.map(({ node }, i) => (\r\n        <Link to={node.fields.slug} key={i} className=\"link\">\r\n          <div className=\"post-list\">\r\n\r\n            <h1>{node.frontmatter.title}</h1>\r\n            <span>{node.frontmatter.date}</span>\r\n            <p>{node.excerpt}</p>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default IndexPage;\r\n\r\nexport const listQuery = graphql`\r\n  query ListQuery {\r\n    allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\r\n      edges {\r\n        node {\r\n          fields{\r\n            slug\r\n          }\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM Do YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}