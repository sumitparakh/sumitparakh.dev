{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","TagsPage","props","data","allMarkdownRemark","group","a","createElement","className","map","tag","to","fieldValue","totalCount","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","render","finalData","Fragment","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","header","site","siteMetadata","title","paddingTop","Date","getFullYear","_755544856"],"mappings":"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","file":"component---src-pages-tags-js-1eb059a479c84cb97177.js","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/layout';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nfunction TagsPage(props) {\r\n    const data = props.data.allMarkdownRemark.group;\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"tags\">\r\n                <h1>All tags</h1>\r\n                {\r\n                    data.map(tag => (\r\n                        <Link to={`/${tag.fieldValue}`}>\r\n                            {tag.fieldValue} {`(${tag.totalCount})`}\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default TagsPage;\r\n\r\nexport const pageQuery = graphql`\r\n    query {\r\n        allMarkdownRemark(\r\n            limit: 2000) {\r\n                group(field: frontmatter___tags) {\r\n                    fieldValue\r\n                    totalCount\r\n                }\r\n            }\r\n    }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\n\r\nimport Header from \"./header\";\r\nimport \"./layout.css\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}