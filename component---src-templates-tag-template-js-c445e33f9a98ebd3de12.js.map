{"version":3,"sources":["webpack:///./src/templates/tag-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","Tags","props","posts","data","allMarkdownRemark","edges","tag","pageContext","a","createElement","title","description","url","location","href","pathname","className","map","_ref","i","node","key","to","fields","slug","frontmatter","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","children","Consumer","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","useStyles","makeStyles","theme","root","display","marginBottom","menuButton","marginRight","spacing","hide","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","Header","siteTitle","toggleTheme","themeActionCss","toggleThemeAction","classes","_React$useState","useState","open","setOpen","react_default","MuiThemeProvider","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","onClick","clsx","Menu","Typography","variant","noWrap","gatsby_browser_entry","style","textDecoration","edge","Drawer","anchor","ChevronRight","Divider","List","text","index","ListItem","button","ListItemIcon","Inbox","Mail","ListItemText","primary","defaultProps","Layout","THEME_LIGHT","THEME_DARK","themeType","_React$useState$","setThemeType","createMuiTheme","palette","type","main","getPrimaryColor","secondary","toggleUITheme","header","site","siteMetadata","margin","maxWidth","paddingTop","Date","getFullYear","_755544856","SEO","image","article","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_ref2","_ref2$site$siteMetada","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","react_helmet__WEBPACK_IMPORTED_MODULE_2__","name","property","_public_static_d_1376445457_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-tag-template-js-c445e33f9a98ebd3de12.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/SEO\";\n\nfunction Tags(props) {\n  const posts = props.data.allMarkdownRemark.edges;\n  const { tag } = props.pageContext;\n\n  return (\n    <Layout>\n      <SEO\n        title={`Available posts in ${tag}`}\n        description={`Available posts in ${tag}`}\n        url={props.location.href}\n        pathname={props.location.pathname}\n      />\n      <h1>{`Available posts in ${tag}`}</h1>\n      <div className=\"tags\">\n        {posts.map(({ node }, i) => (\n          <Link key={i} to={node.fields.slug}>\n            {node.frontmatter.title}\n          </Link>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const query = graphql`\n  query TagsQuery($tag: String!) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { eq: $tag } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport {\n  AppBar,\n  CssBaseline,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  ChevronRight,\n  Menu,\n  Inbox,\n  Mail,\n} from \"@material-ui/icons\";\n\nimport clsx from \"clsx\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    marginBottom: `4.75rem`,\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst Header = ({ siteTitle, toggleTheme, themeActionCss, toggleThemeAction }) => {\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    // setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  return (\n    <>\n      <MuiThemeProvider theme={toggleTheme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                className={clsx(classes.menuButton, open && classes.hide)}\n              >\n                <Menu />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                <Link\n                  to=\"/\"\n                  style={{\n                    color: `white`,\n                    textDecoration: `none`,\n                  }}\n                >\n                  {siteTitle}\n                </Link>\n              </Typography>\n              <IconButton\n                className=\"toggleThemeMode\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"end\"\n                onClick={toggleThemeAction}\n              >\n                <i className={themeActionCss}></i>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n          >\n            <div className={classes.drawer}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronRight />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <Inbox /> : <Mail />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <List>\n              {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <Inbox /> : <Mail />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </Drawer>\n        </div>\n      </MuiThemeProvider>\n    </>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  theme: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  theme: `light`\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst Layout = ({ children }) => {\n  const THEME_LIGHT = 'light';\n  const THEME_DARK = 'dark';\n  const [{ themeType, themeActionCss }, setThemeType] = React.useState({ themeType: THEME_LIGHT, themeActionCss: 'far fa-lightbulb' });\n\n\n  function getPrimaryColor(type) {\n    switch (type) {\n      case THEME_DARK: return '#303030';\n      case THEME_LIGHT: return '#3f51b5';\n    }\n  }\n\n  const toggleTheme = createMuiTheme({\n    palette: {\n      type: themeType,\n      primary: {\n        main: getPrimaryColor(themeType),\n      },\n      secondary: {\n        main: '#303030'\n      }\n    }\n  });\n\n  function toggleUITheme() {\n    if (themeType === THEME_LIGHT) {\n      setThemeType({ themeType: THEME_DARK, themeActionCss: 'fas fa-lightbulb' });\n    }\n    if (themeType === THEME_DARK) {\n      setThemeType({ themeType: THEME_LIGHT, themeActionCss: 'far fa-lightbulb' });\n    }\n  }\n\n  return (\n    <StaticQuery\n      query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n      render={data => (\n        <>\n          <Header siteTitle={data.site.siteMetadata.title} toggleTheme={toggleTheme} themeActionCss={themeActionCss}\n            toggleThemeAction={toggleUITheme} />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 0.7rem 0.7rem`,\n              paddingTop: 0,\n            }}\n          >\n            <main>{children}</main>\n            <footer>© {new Date().getFullYear()}</footer>\n          </div>\n        </>\n      )}\n    />\n  )\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ title, description, image, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          defaultImage,\n          twitterUsername,\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${image || defaultImage}`,\n        url: `${siteUrl}${pathname || \"/\"}`,\n      }\n\n      return (\n        <>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && (\n              <meta property=\"og:type\" content=\"article\" />\n            )}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n              <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n              <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n              <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n          </Helmet>\n        </>\n      )\n    }}\n  />\n)\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  pathname: null,\n  article: false,\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`\n"],"sourceRoot":""}