{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","useStyles","makeStyles","theme","root","display","marginBottom","menuButton","marginRight","spacing","hide","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","Header","siteTitle","toggleTheme","themeActionCss","toggleThemeAction","classes","_React$useState","useState","open","setOpen","react_default","MuiThemeProvider","className","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","onClick","clsx","Menu","Typography","variant","noWrap","gatsby_browser_entry","to","style","textDecoration","edge","Drawer","anchor","ChevronRight","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","Inbox","Mail","ListItemText","primary","defaultProps","Layout","THEME_LIGHT","THEME_DARK","themeType","_React$useState$","setThemeType","createMuiTheme","palette","type","main","getPrimaryColor","secondary","toggleUITheme","header","site","siteMetadata","margin","maxWidth","paddingTop","Date","getFullYear","_755544856","SEO","description","image","pathname","article","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_ref2","_ref2$site$siteMetada","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","react_helmet__WEBPACK_IMPORTED_MODULE_2__","name","property","_public_static_d_1376445457_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-404-js-f4f0a2382291eb067081.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport {\n  AppBar,\n  CssBaseline,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  ChevronRight,\n  Menu,\n  Inbox,\n  Mail,\n} from \"@material-ui/icons\";\n\nimport clsx from \"clsx\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    marginBottom: `4.75rem`,\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst Header = ({ siteTitle, toggleTheme, themeActionCss, toggleThemeAction }) => {\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    // setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  return (\n    <>\n      <MuiThemeProvider theme={toggleTheme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                className={clsx(classes.menuButton, open && classes.hide)}\n              >\n                <Menu />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                <Link\n                  to=\"/\"\n                  style={{\n                    color: `white`,\n                    textDecoration: `none`,\n                  }}\n                >\n                  {siteTitle}\n                </Link>\n              </Typography>\n              <IconButton\n                className=\"toggleThemeMode\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"end\"\n                onClick={toggleThemeAction}\n              >\n                <i className={themeActionCss}></i>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n          >\n            <div className={classes.drawer}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronRight />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <Inbox /> : <Mail />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <List>\n              {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <Inbox /> : <Mail />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </Drawer>\n        </div>\n      </MuiThemeProvider>\n    </>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  theme: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  theme: `light`\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst Layout = ({ children }) => {\n  const THEME_LIGHT = 'light';\n  const THEME_DARK = 'dark';\n  const [{ themeType, themeActionCss }, setThemeType] = React.useState({ themeType: THEME_LIGHT, themeActionCss: 'far fa-lightbulb' });\n\n\n  function getPrimaryColor(type) {\n    switch (type) {\n      case THEME_DARK: return '#303030';\n      case THEME_LIGHT: return '#3f51b5';\n    }\n  }\n\n  const toggleTheme = createMuiTheme({\n    palette: {\n      type: themeType,\n      primary: {\n        main: getPrimaryColor(themeType),\n      },\n      secondary: {\n        main: '#303030'\n      }\n    }\n  });\n\n  function toggleUITheme() {\n    if (themeType === THEME_LIGHT) {\n      setThemeType({ themeType: THEME_DARK, themeActionCss: 'fas fa-lightbulb' });\n    }\n    if (themeType === THEME_DARK) {\n      setThemeType({ themeType: THEME_LIGHT, themeActionCss: 'far fa-lightbulb' });\n    }\n  }\n\n  return (\n    <StaticQuery\n      query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n      render={data => (\n        <>\n          <Header siteTitle={data.site.siteMetadata.title} toggleTheme={toggleTheme} themeActionCss={themeActionCss}\n            toggleThemeAction={toggleUITheme} />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 0.7rem 0.7rem`,\n              paddingTop: 0,\n            }}\n          >\n            <main>{children}</main>\n            <footer>© {new Date().getFullYear()}</footer>\n          </div>\n        </>\n      )}\n    />\n  )\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ title, description, image, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          defaultImage,\n          twitterUsername,\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${image || defaultImage}`,\n        url: `${siteUrl}${pathname || \"/\"}`,\n      }\n\n      return (\n        <>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && (\n              <meta property=\"og:type\" content=\"article\" />\n            )}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n              <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n              <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n              <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n          </Helmet>\n        </>\n      )\n    }}\n  />\n)\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  pathname: null,\n  article: false,\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`\n"],"sourceRoot":""}