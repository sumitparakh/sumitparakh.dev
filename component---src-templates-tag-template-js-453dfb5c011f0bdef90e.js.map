{"version":3,"sources":["webpack:///./src/templates/tag-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","Tags","props","posts","data","allMarkdownRemark","edges","tag","pageContext","a","createElement","className","map","_ref","i","node","to","fields","slug","frontmatter","title","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","useStyles","makeStyles","theme","root","display","background","marginBottom","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Header","_clsx","siteTitle","classes","useTheme","_React$useState","useState","open","setOpen","react_default","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Menu","Typography","variant","noWrap","gatsby_browser_entry","style","textDecoration","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","text","index","ListItem","button","key","ListItemIcon","Inbox","Mail","ListItemText","primary","defaultProps","Layout","header","site","siteMetadata","margin","maxWidth","paddingTop","Date","getFullYear","_755544856"],"mappings":"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","file":"component---src-templates-tag-template-js-453dfb5c011f0bdef90e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nfunction Tags(props) {\n  const posts = props.data.allMarkdownRemark.edges\n  const { tag } = props.pageContext\n\n  return (\n    <Layout>\n      <h1>{`Available posts in ${tag}`}</h1>\n      <div className=\"tags\">\n        {posts.map(({ node }, i) => (\n          <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const query = graphql`\n  query TagsQuery($tag: String!) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { eq: $tag } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  AppBar,\n  CssBaseline,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  ChevronLeft,\n  ChevronRight,\n  Menu,\n  Inbox,\n  Mail,\n} from \"@material-ui/icons\";\n\nimport clsx from \"clsx\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    background: `rebeccapurple`,\n    marginBottom: `4.75rem`,\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst Header = ({ siteTitle, props }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n\n  function handleDrawerOpen() {\n    // setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, { [classes.appBarShift]: open })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <Menu />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              <Link\n                to=\"/\"\n                style={{\n                  color: `white`,\n                  textDecoration: `none`,\n                }}\n              >\n                {siteTitle}\n              </Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawer}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? <ChevronLeft /> : <ChevronRight />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <Inbox /> : <Mail />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <Inbox /> : <Mail />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n      </div>\n    </>\n  )\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 0.7rem 0.7rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>© {new Date().getFullYear()}</footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}