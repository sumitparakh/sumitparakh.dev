{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","useStyles","makeStyles","theme","root","display","background","marginBottom","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Header","_clsx","siteTitle","classes","useTheme","_React$useState","useState","open","setOpen","react_default","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Menu","Typography","variant","noWrap","gatsby_browser_entry","to","style","textDecoration","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","Inbox","Mail","ListItemText","primary","defaultProps","Layout","header","site","siteMetadata","margin","maxWidth","paddingTop","Date","getFullYear","_755544856","SEO","description","image","pathname","article","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_ref2","_ref2$site$siteMetada","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","react_helmet__WEBPACK_IMPORTED_MODULE_2__","name","property","_public_static_d_1376445457_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-404-js-3dfb7706a3de79a1f415.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { AppBar, CssBaseline, Toolbar, IconButton, Typography, Drawer, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { ChevronLeft, ChevronRight, Menu, Inbox, Mail } from '@material-ui/icons';\r\n\r\nimport clsx from 'clsx';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    background: `rebeccapurple`,\r\n    marginBottom: `4.75rem`,\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nconst Header = ({ siteTitle, props }) => {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleDrawerOpen() {\r\n    // setOpen(true);\r\n  }\r\n\r\n  function handleDrawerClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (<>\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, { [classes.appBarShift]: open })}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            <Link to=\"/\"\r\n              style={{\r\n                color: `white`,\r\n                textDecoration: `none`,\r\n              }}\r\n            >\r\n\r\n              {siteTitle}\r\n            </Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawer}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n\r\n            {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <Inbox /> : <Mail />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <Inbox /> : <Mail />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n\r\n      </Drawer>\r\n    </div>\r\n\r\n  </>);\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\n\r\nimport Header from \"./header\";\r\nimport \"./layout.css\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\n\r\nconst SEO = ({ title, description, image, pathname, article }) => (\r\n  <StaticQuery\r\n    query={query}\r\n    render={({\r\n      site: {\r\n        siteMetadata: {\r\n          defaultTitle,\r\n          titleTemplate,\r\n          defaultDescription,\r\n          siteUrl,\r\n          defaultImage,\r\n          twitterUsername,\r\n        },\r\n      },\r\n    }) => {\r\n      const seo = {\r\n        title: title || defaultTitle,\r\n        description: description || defaultDescription,\r\n        image: `${siteUrl}${image || defaultImage}`,\r\n        url: `${siteUrl}${pathname || \"/\"}`,\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\r\n            <meta name=\"description\" content={seo.description} />\r\n            <meta name=\"image\" content={seo.image} />\r\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\r\n            {(article ? true : null) && (\r\n              <meta property=\"og:type\" content=\"article\" />\r\n            )}\r\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta property=\"og:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            {twitterUsername && (\r\n              <meta name=\"twitter:creator\" content={twitterUsername} />\r\n            )}\r\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta name=\"twitter:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\r\n          </Helmet>\r\n        </>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  pathname: PropTypes.string,\r\n  article: PropTypes.bool,\r\n};\r\n\r\nSEO.defaultProps = {\r\n  title: null,\r\n  description: null,\r\n  image: null,\r\n  pathname: null,\r\n  article: false,\r\n};\r\n\r\nconst query = graphql`\r\n  query SEO {\r\n    site {\r\n      siteMetadata {\r\n        defaultTitle: title\r\n        titleTemplate\r\n        defaultDescription: description\r\n        siteUrl: url\r\n        defaultImage: image\r\n        twitterUsername\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}